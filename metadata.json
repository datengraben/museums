{
    "title": "niche-museums.com",
    "databases": {
        "browse": {
            "queries": {
                "nearby": "select *, haversine(latitude, longitude, cast(:latitude as real), cast(:longitude as real), 'mi') as distance_mi\nfrom museums order by distance_mi",
                "feed": "SELECT\n  'tag:niche-museums.com,' || substr(m.created, 0, 11) || ':' || m.id as atom_id,\n  m.name as atom_title,\n  m.created as atom_updated,\n  'https://www.niche-museums.com/browse/museums/' || m.id as atom_link,\n  coalesce(\n    '<img src=\"' || m.photo_url || '?w=800&amp;h=400&amp;fit=crop&amp;auto=compress\">',\n    ''\n  ) || render_markdown(\n    m.description || '\n\n' || coalesce(\n      (\n        select\n          group_concat(\n            '* [' || json_extract(p.value, '$.title') || '](' || json_extract(p.value, '$.url') || ') ' || json_extract(p.value, '$.author') || ', ' || json_extract(p.value, '$.publication') || ', ' || json_extract(p.value, '$.date'),\n            '\n'\n          )\n        from\n          json_each(coalesce(m.press, '[{}]')) as p\n      ),\n      ''\n    )\n  ) || coalesce(\n    (\n      select\n        group_concat(\n          '<p><img src=\"' || json_extract(ph.value, '$.url') || '?w=400&auto=compress\"></p>',\n          ''\n        )\n      from\n        json_each(coalesce(m.photos, '[{}]')) as ph\n    ),\n    ''\n  ) as atom_content_html\nFROM\n  museums m\norder by\n  m.created desc\nlimit\n  15",
                "search": "select\n  museums_fts.rank,\n  museums.*\nfrom\n  museums\n  join museums_fts on museums.id = museums_fts.rowid\nwhere\n  museums_fts match case\n    :q\n    when '' then '*'\n    else escape_fts_query(:q)\n  end\norder by\n  museums_fts.rank"
            }
        }
    }
}
